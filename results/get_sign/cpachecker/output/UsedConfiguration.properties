analysis.algorithm.CEGAR = true
analysis.alwaysStoreCounterexamples = true
analysis.checkCounterexamples = true
analysis.name = symbolicExecution-Cegar
analysis.programNames = code.c
analysis.summaryEdges = true
analysis.traversal.order = bfs
analysis.traversal.random.exponent = 8
analysis.traversal.useCallstack = false
analysis.traversal.useReversePostorder = false
analysis.traversal.weightedDepth = true
ARGCPA.cpa = cpa.composite.CompositeCPA
cegar.refiner = cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner
CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.value.ValueAnalysisCPA, cpa.constraints.ConstraintsCPA
counterexample.checker = CPACHECKER
counterexample.checker.config = ../cex-checks/predicateAnalysis-as-cex-check.properties
cpa = cpa.arg.ARGCPA
cpa.composite.aggregateBasicBlocks = true
cpa.constraints.removeOutdated = false
cpa.value.assignEqualityAssumptions = false
cpa.value.optimizeBooleanVariables = false
cpa.value.refinement.restart = ROOT
cpa.value.unknownValueHandling = INTRODUCE_SYMBOLIC
log.level = INFO
parser.usePreprocessor = true
