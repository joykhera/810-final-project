digraph CFA {
1 [shape="circle" label="N1\n18"]
17 [shape="circle" label="N17\n17"]
18 [shape="circle" label="N18\n16"]
19 [shape="circle" label="N19\n15"]
2 [shape="circle" label="N2\n14"]
3 [shape="circle" label="N3\n13"]
4 [shape="circle" label="N4\n12"]
5 [shape="circle" label="N5\n11"]
6 [shape="doublecircle" label="N6\n10"]
8 [shape="diamond" label="N8\n9"]
13 [shape="circle" label="N13\n6"]
0 [shape="circle" label="N0\n5"]
14 [shape="circle" label="N14\n8"]
15 [shape="circle" label="N15\n7"]
7 [shape="circle" label="N7\n4"]
9 [shape="circle" label="N9\n3"]
10 [shape="circle" label="N10\n2"]
11 [shape="circle" label="N11\n1"]
12 [shape="circle" label="N12\n0"]
node [shape="circle"]
subgraph cluster_main {
label="main()"
1 -> 17 [label="INIT GLOBAL VARS"]
17 -> 18 [label="void __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function);"]
18 -> 19 [label="int main();"]
19 -> 2 [label="Function start dummy edge"]
2 -> 3 [label="int x = 0;"]
3 -> 4 [label="int y = 0;"]
4 -> 5 [label="int z = 0;"]
5 -> 6 [label="while"]
6 -> 7 [label="[x < 2]"]
6 -> 8 [label="[!(x < 2)]"]
8 -> 14 [label="[z != 0]"]
8 -> 13 [label="[!(z != 0)]"]
13 -> 0 [label="return 0;"]
14 -> 15 [label="__assert_fail(\"0\", \"example-const.c\", 20, \"main\");"]
15 -> 13 [label=""]
7 -> 9 [label="const int __CPAchecker_TMP_0 = x;"]
9 -> 10 [label="x = x + 1;"]
10 -> 11 [label="__CPAchecker_TMP_0;"]
11 -> 12 [label="y = z + 1;"]
12 -> 6 [label=""]}
}