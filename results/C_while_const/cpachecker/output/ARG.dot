digraph ARG {
node [style="filled" shape="box" color="white"]
1 [label="1 @ N1\nmain entry\nValueAnalysisState: []\n" id="1"]
65 [label="65 @ N17\nmain\nValueAnalysisState: []\n" id="65"]
67 [label="67 @ N5\nmain\nValueAnalysisState: [main::z=NumericValue[number=0] (int)]\n" id="67"]
68 [label="68 @ N6\nmain\nValueAnalysisState: [main::z=NumericValue[number=0] (int)]\n" id="68"]
73 [label="73 @ N8\nmain\nValueAnalysisState: [main::z=NumericValue[number=0] (int)]\n" id="73"]
78 [label="78 @ N13\nmain\nValueAnalysisState: [main::z=NumericValue[number=0] (int)]\n" id="78"]
81 [label="81 @ N0\nmain exit\nValueAnalysisState: []\n" id="81"]
72 [label="72 @ N7\nmain\nValueAnalysisState: [main::z=NumericValue[number=0] (int)]\n" id="72"]
76 [label="76 @ N12\nmain\nValueAnalysisState: [main::z=NumericValue[number=0] (int)]\n" id="76"]
77 [fillcolor="green" label="77 @ N6\nmain\nValueAnalysisState: [main::z=NumericValue[number=0] (int)]\n" id="77"]
1 -> 65 [label="Line 0: \lINIT GLOBAL VARS\l" id="1 -> 65"]
65 -> 67 [label="Lines 9 - 14: \lvoid __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function);\lint main();\lFunction start dummy edge\lint x = 0;\lint y = 0;\lint z = 0;\l" id="65 -> 67"]
67 -> 68 [label="Line 15: \lwhile\l" id="67 -> 68"]
77 -> 68 [style="dashed" weight="0" label="covered by"]
68 -> 72 [label="Line 15: \l[x < 2]\l" id="68 -> 72"]
68 -> 73 [label="Line 15: \l[!(x < 2)]\l" id="68 -> 73"]
73 -> 78 [label="Line 19: \l[!(z != 0)]\l" id="73 -> 78"]
78 -> 81 [label="Line 22: \lreturn 0;\l" id="78 -> 81"]
72 -> 76 [label="Lines 16 - 17: \lconst int __CPAchecker_TMP_0 = x;\lx = x + 1;\l__CPAchecker_TMP_0;\ly = z + 1;\l" id="72 -> 76"]
76 -> 77 [label="Line 0: \l\l" id="76 -> 77"]
}
