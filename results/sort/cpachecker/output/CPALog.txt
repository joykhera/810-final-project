2025-05-12 21:27:49:378	INFO	CPAMain.detectFrontendLanguageIfNecessary	Language C detected and set for analysis

2025-05-12 21:27:49:465	INFO	CPAchecker.run	CPAchecker 4.0 / default (OpenJDK 64-Bit Server VM 17.0.14) started

2025-05-12 21:27:49:519	INFO	CPAchecker.parse	Parsing CFA from file(s) "code.c"

2025-05-12 21:27:52:160	INFO	CoreComponentsFactory.createAlgorithm	Using heuristics to select analysis

2025-05-12 21:27:52:174	WARNING	CPAchecker.printConfigurationWarnings	The following configuration options were specified but are not used:
 cpa.callstack.unsupportedFunctions 


2025-05-12 21:27:52:175	INFO	CPAchecker.runAlgorithm	Starting analysis ...

2025-05-12 21:27:52:189	INFO	SelectionAlgorithm.chooseConfig	Performing heuristic ...

2025-05-12 21:27:52:198	INFO	Analysis /cpachecker/config/components/configselection-restart-valueAnalysis-fallbacks.properties:CoreComponentsFactory.createAlgorithm	Using Restarting Algorithm

2025-05-12 21:27:52:209	INFO	Analysis /cpachecker/config/components/configselection-restart-valueAnalysis-fallbacks.properties:RestartAlgorithm.run	Loading analysis 1 from file /cpachecker/config/components/parallel-valueAnalysis.properties ...

2025-05-12 21:27:52:229	INFO	Analysis /cpachecker/config/components/configselection-restart-valueAnalysis-fallbacks.properties:Analysis /cpachecker/config/components/parallel-valueAnalysis.properties:Parallel analysis 1:ResourceLimitChecker.fromConfiguration	Using the following resource limits: Thread CPU-time limit of 90s

2025-05-12 21:27:52:597	INFO	Analysis /cpachecker/config/components/configselection-restart-valueAnalysis-fallbacks.properties:Analysis /cpachecker/config/components/parallel-valueAnalysis.properties:Parallel analysis 3:PredicateCPA:PredicateCPA.<init>	Using predicate analysis with MathSAT5 version 5.6.10 (9293adc746be) (May 31 2023 12:38:06, gmp 6.2.0, gcc 7.5.0, 64-bit, reentrant).

2025-05-12 21:27:52:807	INFO	Analysis /cpachecker/config/components/configselection-restart-valueAnalysis-fallbacks.properties:Analysis /cpachecker/config/components/parallel-valueAnalysis.properties:Parallel analysis 3:InductionStepCase:PredicateCPA:PredicateCPA.<init>	Using predicate analysis with MathSAT5 version 5.6.10 (9293adc746be) (May 31 2023 12:38:06, gmp 6.2.0, gcc 7.5.0, 64-bit, reentrant).

2025-05-12 21:27:52:831	INFO	Analysis /cpachecker/config/components/configselection-restart-valueAnalysis-fallbacks.properties:RestartAlgorithm.run	Starting analysis 1 ...

2025-05-12 21:27:53:180	INFO	Analysis /cpachecker/config/components/configselection-restart-valueAnalysis-fallbacks.properties:Analysis /cpachecker/config/components/parallel-valueAnalysis.properties:Parallel analysis 3:AbstractBMCAlgorithm.run	Creating formula for program

2025-05-12 21:27:53:397	INFO	Analysis /cpachecker/config/components/configselection-restart-valueAnalysis-fallbacks.properties:Analysis /cpachecker/config/components/parallel-valueAnalysis.properties:Parallel analysis 1:CounterexampleCheckAlgorithm.checkCounterexample	Error path found, starting counterexample check with CPACHECKER.

2025-05-12 21:27:54:540	INFO	Analysis /cpachecker/config/components/configselection-restart-valueAnalysis-fallbacks.properties:Analysis /cpachecker/config/components/parallel-valueAnalysis.properties:Parallel analysis 2:CounterexampleCheckAlgorithm.checkCounterexample	Error path found, starting counterexample check with CPACHECKER.

2025-05-12 21:27:55:339	WARNING	Analysis /cpachecker/config/components/configselection-restart-valueAnalysis-fallbacks.properties:Analysis /cpachecker/config/components/parallel-valueAnalysis.properties:Parallel analysis 2:CounterexampleCheck:AutomatonGraphmlParser.getSpecAsProperties	Cannot map specification // This file is part of CPAchecker,
// a tool for configurable software verification:
// https://cpachecker.sosy-lab.org
//
// SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
//
// SPDX-License-Identifier: Apache-2.0

OBSERVER AUTOMATON AssertionAutomaton
// This automaton detects assertions that may fail
// (i.e., a function call to __assert_fail).

INITIAL STATE Init;

STATE USEFIRST Init :
   // Match standard calls to __assert_fail with nice message on violations.
   MATCH {__assert_fail($1, $2, $3, $4)}
    -> ERROR("assertion in $location: Condition $1 failed in $2, line $3");

   // Match if assert_fail or assert_func is called with any number of parameters.
   MATCH {__assert_fail($?)} || MATCH {__assert_func($?)}
   -> ERROR("assertion in $location");

   // Print warnings for other common error functions to warn users about potentially wrong specification.

   MATCH {assert($?)} && !CHECK(location, "functionName==assert")
   -> PRINT "WARNING: Function assert() without body detected. Please run the C preprocessor on this file to enable assertion checking."
      GOTO Init;

   MATCH {__VERIFIER_error($?)} && !CHECK(location, "functionName==__VERIFIER_error")
   -> PRINT "WARNING: Function __VERIFIER_error() is ignored by this specification. If you want to check for reachability of __VERIFIER_error, pass '--spec sv-comp-reachability' as parameter."
      GOTO Init;

  MATCH {reach_error($?)}
   -> PRINT "WARNING: Function reach_error() is ignored by this specification. If you want to check for reachability of reach_error, pass '--spec sv-comp-reachability' as parameter."
      GOTO Init;

END AUTOMATON to property type. Will ignore it (would only be problematic if this were the termination property).

2025-05-12 21:27:55:340	WARNING	Analysis /cpachecker/config/components/configselection-restart-valueAnalysis-fallbacks.properties:Analysis /cpachecker/config/components/parallel-valueAnalysis.properties:Parallel analysis 1:CounterexampleCheck:AutomatonGraphmlParser.getSpecAsProperties	Cannot map specification // This file is part of CPAchecker,
// a tool for configurable software verification:
// https://cpachecker.sosy-lab.org
//
// SPDX-FileCopyrightText: 2007-2020 Dirk Beyer <https://www.sosy-lab.org>
//
// SPDX-License-Identifier: Apache-2.0

OBSERVER AUTOMATON AssertionAutomaton
// This automaton detects assertions that may fail
// (i.e., a function call to __assert_fail).

INITIAL STATE Init;

STATE USEFIRST Init :
   // Match standard calls to __assert_fail with nice message on violations.
   MATCH {__assert_fail($1, $2, $3, $4)}
    -> ERROR("assertion in $location: Condition $1 failed in $2, line $3");

   // Match if assert_fail or assert_func is called with any number of parameters.
   MATCH {__assert_fail($?)} || MATCH {__assert_func($?)}
   -> ERROR("assertion in $location");

   // Print warnings for other common error functions to warn users about potentially wrong specification.

   MATCH {assert($?)} && !CHECK(location, "functionName==assert")
   -> PRINT "WARNING: Function assert() without body detected. Please run the C preprocessor on this file to enable assertion checking."
      GOTO Init;

   MATCH {__VERIFIER_error($?)} && !CHECK(location, "functionName==__VERIFIER_error")
   -> PRINT "WARNING: Function __VERIFIER_error() is ignored by this specification. If you want to check for reachability of __VERIFIER_error, pass '--spec sv-comp-reachability' as parameter."
      GOTO Init;

  MATCH {reach_error($?)}
   -> PRINT "WARNING: Function reach_error() is ignored by this specification. If you want to check for reachability of reach_error, pass '--spec sv-comp-reachability' as parameter."
      GOTO Init;

END AUTOMATON to property type. Will ignore it (would only be problematic if this were the termination property).

2025-05-12 21:27:55:577	INFO	Analysis /cpachecker/config/components/configselection-restart-valueAnalysis-fallbacks.properties:Analysis /cpachecker/config/components/parallel-valueAnalysis.properties:Parallel analysis 1:CounterexampleCheck:PredicateCPA:PredicateCPA.<init>	Using predicate analysis with MathSAT5 version 5.6.10 (9293adc746be) (May 31 2023 12:38:06, gmp 6.2.0, gcc 7.5.0, 64-bit, reentrant).

2025-05-12 21:27:55:583	INFO	Analysis /cpachecker/config/components/configselection-restart-valueAnalysis-fallbacks.properties:Analysis /cpachecker/config/components/parallel-valueAnalysis.properties:Parallel analysis 2:CounterexampleCheck:PredicateCPA:PredicateCPA.<init>	Using predicate analysis with MathSAT5 version 5.6.10 (9293adc746be) (May 31 2023 12:38:06, gmp 6.2.0, gcc 7.5.0, 64-bit, reentrant).

2025-05-12 21:27:55:793	WARNING	Analysis /cpachecker/config/components/configselection-restart-valueAnalysis-fallbacks.properties:Analysis /cpachecker/config/components/parallel-valueAnalysis.properties:Parallel analysis 1:CExpressionVisitorWithPointerAliasing.visit	Warning: Counterexample found, but feasibility could not be verified (line 55: Unrecognized C code (Memory assignment function called but their handling is disabled. Set cpa.predicate.enableMemoryAssignmentFunctions=true to enable.): memcpy(temp1, array, 16UL))

2025-05-12 21:27:55:793	WARNING	Analysis /cpachecker/config/components/configselection-restart-valueAnalysis-fallbacks.properties:Analysis /cpachecker/config/components/parallel-valueAnalysis.properties:Parallel analysis 2:CExpressionVisitorWithPointerAliasing.visit	Warning: Counterexample found, but feasibility could not be verified (line 55: Unrecognized C code (Memory assignment function called but their handling is disabled. Set cpa.predicate.enableMemoryAssignmentFunctions=true to enable.): memcpy(temp1, array, 16UL))

2025-05-12 21:27:55:797	INFO	Analysis /cpachecker/config/components/configselection-restart-valueAnalysis-fallbacks.properties:RestartAlgorithm.skipNextAnalysesIfRequired	Ignoring restart configuration '/cpachecker/config/components/recursion.properties' because condition if-recursive did not match.

2025-05-12 21:27:55:797	INFO	Analysis /cpachecker/config/components/configselection-restart-valueAnalysis-fallbacks.properties:RestartAlgorithm.skipNextAnalysesIfRequired	Ignoring restart configuration '/cpachecker/config/components/concurrency.properties' because condition if-concurrent did not match.

2025-05-12 21:27:55:800	SEVERE	ParallelAlgorithm.handleFutureResults	Error: Several exceptions occured during the analysis:
 -> line 55: Unrecognized C code (Memory assignment function called but their handling is disabled. Set cpa.predicate.enableMemoryAssignmentFunctions=true to enable.): memcpy(temp1, array, 16UL)
 -> Error path found, but identified as infeasible by counterexample check with CPACHECKER.

