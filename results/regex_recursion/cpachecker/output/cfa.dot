digraph CFA {
61 [shape="circle" label="N61\n17"]
72 [shape="circle" label="N72\n16"]
73 [shape="circle" label="N73\n15"]
74 [shape="circle" label="N74\n14"]
75 [shape="circle" label="N75\n13"]
76 [shape="circle" label="N76\n12"]
77 [shape="circle" label="N77\n11"]
78 [shape="circle" label="N78\n10"]
62 [shape="circle" label="N62\n9"]
63 [shape="circle" label="N63\n8"]
64 [shape="circle" label="N64\n7"]
65 [shape="doublecircle" label="N65\n6"]
68 [shape="circle" label="N68\n5"]
41 [shape="circle" label="N41\n16"]
42 [shape="diamond" label="N42\n15"]
43 [shape="circle" label="N43\n14"]
53 [shape="doublecircle" label="N53\n13"]
56 [shape="circle" label="N56\n12"]
18 [shape="circle" label="N18\n17"]
19 [shape="diamond" label="N19\n16"]
20 [shape="diamond" label="N20\n15"]
23 [shape="diamond" label="N23\n14"]
28 [shape="diamond" label="N28\n12"]
32 [shape="circle" label="N32\n9"]
17 [shape="circle" label="N17\n0"]
14 [shape="diamond" label="N14\n10"]
12 [shape="circle" label="N12\n9"]
0 [shape="circle" label="N0\n1"]
26 [shape="circle" label="N26\n2"]
11 [shape="circle" label="N11\n8"]
3 [shape="doubleoctagon" label="N3\n7"]
5 [shape="circle" label="N5\n2"]
6 [shape="circle" label="N6\n6"]
8 [shape="circle" label="N8\n5"]
9 [shape="diamond" label="N9\n4"]
7 [shape="diamond" label="N7\n3"]
4 [shape="circle" label="N4\n0"]
10 [shape="doublecircle" label="N10\n12"]
13 [shape="circle" label="N13\n11"]
37 [shape="circle" label="N37\n6"]
46 [shape="circle" label="N46\n1"]
40 [shape="circle" label="N40\n0"]
70 [shape="circle" label="N70\n4"]
60 [shape="circle" label="N60\n3"]
57 [shape="diamond" label="N57\n11"]
55 [shape="circle" label="N55\n10"]
54 [shape="circle" label="N54\n9"]
48 [shape="doubleoctagon" label="N48\n8"]
51 [shape="circle" label="N51\n7"]
52 [shape="diamond" label="N52\n6"]
50 [shape="circle" label="N50\n5"]
49 [shape="circle" label="N49\n4"]
34 [shape="diamond" label="N34\n11"]
35 [shape="diamond" label="N35\n10"]
33 [shape="circle" label="N33\n8"]
36 [shape="circle" label="N36\n7"]
30 [shape="diamond" label="N30\n13"]
29 [shape="circle" label="N29\n5"]
24 [shape="circle" label="N24\n4"]
25 [shape="circle" label="N25\n3"]
1 [shape="circle" label="N1\n14"]
2 [shape="circle" label="N2\n13"]
21 [shape="circle" label="N21\n1"]
44 [shape="circle" label="N44\n3"]
45 [shape="circle" label="N45\n2"]
67 [shape="circle" label="N67\n2"]
69 [shape="circle" label="N69\n1"]
66 [shape="circle" label="N66\n0"]
node [shape="circle"]
subgraph cluster_main {
label="main()"
61 -> 72 [label="INIT GLOBAL VARS"]
72 -> 73 [label="unsigned char __VERIFIER_nondet_uchar();"]
73 -> 74 [label="int matchhere(char *, char *);"]
74 -> 75 [label="int matchstar(int c, char *re, char *text);"]
75 -> 76 [label="int matchhere(char *re, char *text);"]
76 -> 77 [label="int match(char *re, char *text);"]
77 -> 78 [label="int main();"]
78 -> 62 [label="Function start dummy edge"]
62 -> 63 [label="char re[7];"]
63 -> 64 [label="for"]
64 -> 65 [label="int i = 0;"]
65 -> 67 [label="[i < 7]"]
65 -> 68 [label="[!(i < 7)]"]
68 -> 70 [label="match(re, \"hello\");" style="dotted" arrowhead="empty"]
68 -> 70 [label="match(re, \"hello\");"]
70 -> 60 [label="return 0;"]
67 -> 69 [label="re[i] = __VERIFIER_nondet_uchar();"]
69 -> 66 [label=""]
66 -> 65 [label="i = i + 1;"]}
subgraph cluster_match {
label="match()"
41 -> 42 [label="Function start dummy edge"]
42 -> 44 [label="[(re[0]) == '^']"]
42 -> 43 [label="[!((re[0]) == '^')]"]
43 -> 53 [label="do"]
53 -> 56 [label="int __CPAchecker_TMP_2;"]
56 -> 57 [label="__CPAchecker_TMP_2 = matchhere(re, text);" style="dotted" arrowhead="empty"]
56 -> 57 [label="__CPAchecker_TMP_2 = matchhere(re, text);"]
46 -> 40 [label="return __CPAchecker_TMP_0;"]
57 -> 54 [label="[__CPAchecker_TMP_2 == 0]"]
57 -> 55 [label="[!(__CPAchecker_TMP_2 == 0)]"]
55 -> 40 [label="return 1;"]
54 -> 48 [label=""]
48 -> 51 [label="char * const __CPAchecker_TMP_1 = text;"]
51 -> 52 [label="text = text + 1;"]
52 -> 49 [label="[(*__CPAchecker_TMP_1) != '\x0']"]
52 -> 50 [label="[!((*__CPAchecker_TMP_1) != '\x0')]"]
50 -> 40 [label="return 0;"]
49 -> 53 [label="do"]
44 -> 45 [label="int __CPAchecker_TMP_0;"]
45 -> 46 [label="__CPAchecker_TMP_0 = matchhere(re + 1, text);" style="dotted" arrowhead="empty"]
45 -> 46 [label="__CPAchecker_TMP_0 = matchhere(re + 1, text);"]}
subgraph cluster_matchhere {
label="matchhere()"
18 -> 19 [label="Function start dummy edge"]
19 -> 21 [label="[(re[0]) == '\x0']"]
19 -> 20 [label="[!((re[0]) == '\x0')]"]
20 -> 24 [label="[(re[1]) == '*']"]
20 -> 23 [label="[!((re[1]) == '*')]"]
23 -> 30 [label="[(re[0]) == '$']"]
23 -> 28 [label="[!((re[0]) == '$')]"]
28 -> 34 [label="[(*text) != '\x0']"]
28 -> 32 [label="[!((*text) != '\x0')]"]
32 -> 17 [label="return 0;"]
26 -> 17 [label="return __CPAchecker_TMP_0;"]
37 -> 17 [label="return __CPAchecker_TMP_1;"]
34 -> 33 [label="[(re[0]) == '.']"]
34 -> 35 [label="[!((re[0]) == '.')]"]
35 -> 33 [label="[(re[0]) == (*text)]"]
35 -> 32 [label="[!((re[0]) == (*text))]"]
33 -> 36 [label="int __CPAchecker_TMP_1;"]
36 -> 37 [label="__CPAchecker_TMP_1 = matchhere(re + 1, text + 1);" style="dotted" arrowhead="empty"]
36 -> 37 [label="__CPAchecker_TMP_1 = matchhere(re + 1, text + 1);"]
30 -> 29 [label="[(re[1]) == '\x0']"]
30 -> 28 [label="[!((re[1]) == '\x0')]"]
29 -> 17 [label="return (*text) == '\x0';"]
24 -> 25 [label="int __CPAchecker_TMP_0;"]
25 -> 26 [label="__CPAchecker_TMP_0 = matchstar(re[0], re + 2, text);" style="dotted" arrowhead="empty"]
25 -> 26 [label="__CPAchecker_TMP_0 = matchstar(re[0], re + 2, text);"]
21 -> 17 [label="return 0;"]}
subgraph cluster_matchstar {
label="matchstar()"
14 -> 11 [label="[__CPAchecker_TMP_1 == 0]"]
14 -> 12 [label="[!(__CPAchecker_TMP_1 == 0)]"]
12 -> 0 [label="return 1;"]
11 -> 3 [label=""]
3 -> 6 [label="[(*text) != '\x0']"]
3 -> 5 [label="[!((*text) != '\x0')]"]
5 -> 0 [label="return 0;"]
6 -> 8 [label="char * const __CPAchecker_TMP_0 = text;"]
8 -> 9 [label="text = text + 1;"]
9 -> 4 [label="[(*__CPAchecker_TMP_0) == c]"]
9 -> 7 [label="[!((*__CPAchecker_TMP_0) == c)]"]
7 -> 4 [label="[c == '.']"]
7 -> 5 [label="[!(c == '.')]"]
4 -> 10 [label="do"]
10 -> 13 [label="int __CPAchecker_TMP_1;"]
13 -> 14 [label="__CPAchecker_TMP_1 = matchhere(re, text);" style="dotted" arrowhead="empty"]
13 -> 14 [label="__CPAchecker_TMP_1 = matchhere(re, text);"]
1 -> 2 [label="Function start dummy edge"]
2 -> 10 [label="do"]}
68 -> 41 [label="match(re, \"hello\")"]
56 -> 18 [label="matchhere(re, text)"]
17 -> 57 [label="Return edge from matchhere to match: __CPAchecker_TMP_2 = matchhere(re, text);"]
17 -> 46 [label="Return edge from matchhere to match: __CPAchecker_TMP_0 = matchhere(re + 1, text);"]
17 -> 37 [label="Return edge from matchhere to matchhere: __CPAchecker_TMP_1 = matchhere(re + 1, text + 1);"]
17 -> 14 [label="Return edge from matchhere to matchstar: __CPAchecker_TMP_1 = matchhere(re, text);"]
0 -> 26 [label="Return edge from matchstar to matchhere: __CPAchecker_TMP_0 = matchstar(re[0], re + 2, text);"]
13 -> 18 [label="matchhere(re, text)"]
40 -> 70 [label="Return edge from match to main: match(re, \"hello\");"]
36 -> 18 [label="matchhere(re + 1, text + 1)"]
25 -> 1 [label="matchstar(re[0], re + 2, text)"]
45 -> 18 [label="matchhere(re + 1, text)"]}